var main = function(){
	"use strict";

	/*
	Multiples of 3 and 5

	Problem 1

	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
	Find the sum of all the multiples of 3 or 5 below 1000.
	*/


	var problem1 = function(){
		var $para,
			somme = 0;

		$para = $('<p>').text("Probleme 1 - Multiples of 3 and 5 ");
		$("main .container").append($para);

		for (var i = 1; i < 1000; i++) {
			if (i%3===0 || i%5===0) {
				somme = somme + i;
				/*$para = $('<p>').text(i + " Somme : " + somme);*/
			} /*else{
				$para = $('<p>').text(i);
			}*/
			$("main .container").append($para);
		};
		$para = $('<p>').text("Total : " + somme);
		$("main .container").append($para);
	}

	/*
	Even Fibonacci numbers

	Problem 2

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	*/

	var problem2 = function(){
		var $para,
			sommeTot = 2,
			somme = 0,
			i =0,
			tabInt=[1,2];

		$para = $('<p>').text("Probleme 2 - Even Fibonacci numbers ");
		$("main .container").append($para);

		while(somme <= 4000000){

			i++;

			somme = tabInt[i-1] + tabInt[i];

			if (somme%2===0) {
				sommeTot = sommeTot + somme;
				console.log(somme);
			}
			tabInt[tabInt.length] = somme
		};
		$para = $('<p>').text("Total : " + sommeTot);
		$("main .container").append($para);
	}

	/*
	Largest prime factor

	Problem 3

	The prime factors of 13195 are 5, 7, 13 and 29.
	What is the largest prime factor of the number 600851475143 ?
	*/

	// Fonction permettant d'identifier un nombre premier
	var checkPremier = function(nombre){
		// On boucle de 2 jusqu'à la moitié du nombre testé
		// On ne test pas 1 car tous les nombres premiers sont divisibles par 1
		// On ne dépasse pas la moitié car le plus petit nombre premier est 2
		for (var i = 2; i < nombre/2; i++) {
			// S'il est divisible par un autre nombre il n'est pas un nombre premier
			if(nombre%i===0){
				return false;
			}
		};
		// S'il n'est divisible que par lui même et 1, c'est un nombre premier
		return true;
	};

	var problem3 = function(){
		var $para,
			monReste = 600851475143,
			i = 2,

		$para = $('<p>').text("Probleme 3 - Largest prime factor ");
		$("main .container").append($para);

		// Boucle dans que le reste supérieur 1
		while(monReste > 1){
			// Si le reste de la division par un nombre premier est 0 alors c'est un prime factor
			if(monReste % i === 0 && checkPremier(i)){
				monReste = monReste / i;
				console.log("-> Prime factor : " + i);
			// Si le reste est supérieur à 0 on continue
			}else{
				i++;
			}
		}
		// Affichage du plus grand prime factor
		$para = $('<p>').text("Result : " + i);
		$("main .container").append($para);
	}
	problem3();
};

$(document).ready(main);